const ConfigurationError = require("../error/configuration/ConfigurationError");
const SecurityContext = require("./SecurityContext");

class IdentityServiceSecurityContext extends SecurityContext {
    
    /**
     * Returns the service plans of the consumer application.
     * This method is only available if the context was created from an app2service token and a service with proof token validation enabled.
     * @returns {string[]}
     */
    get servicePlans() {
        if(!this.service.hasProofTokenEnabled()) {
            throw new ConfigurationError("This property is only available on securityContexts created from services with proofToken validation enabled.");
        }

        return this.config.servicePlans;
    }

    // Methods for backward-compatibility
    getUserInfo() {
        return {
            ...super.getUserInfo(),
            logonName: this.token.payload.user_name || this.token.email || this.token.payload.user_uuid || "",
        };
    }
}


module.exports = IdentityServiceSecurityContext;