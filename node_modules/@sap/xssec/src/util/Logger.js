class Logger {
    constructor(loggingConfig, prefix) {
        this.loggingConfig = loggingConfig;
        this.prefix = prefix;
    }

    info(message, args) {
        message = `[${this.prefix}] ${message}`;
        if(args?.correlationId) {
            message += ` (Correlation Id: ${args.correlationId})`;
        }
        this.loggingConfig.info(message, args);
    }

    warn(message, args) {
        message = `[${this.prefix}] ${message}`;
        if(args?.correlationId) {
            message += ` (Correlation Id: ${args.correlationId})`;
        }
        this.loggingConfig.warn(message, args);
    }

    error(message, args) {
        message = `[${this.prefix}] ${message}`;
        if(args?.correlationId) {
            message += ` (Correlation Id: ${args.correlationId})`;
        }
        this.loggingConfig.error(message, args);
    }

    debug(message, args) {
        message = `[${this.prefix}] ${message}`;
        if(args?.correlationId) {
            message += ` (Correlation Id: ${args.correlationId})`;
        }
        this.loggingConfig.debug(message, args);
    }
}

module.exports = Logger;