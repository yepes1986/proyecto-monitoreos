export = SecurityContext;
/**
 * @typedef {import('../service/Service')} Service
 * @typedef {import('../token/Token')} Token
 */
declare class SecurityContext {
    /**
     * Tries to fill up missing properties of the security context configuration from the req object in the configuration.
     * @param {Types.SecurityContextConfig} contextConfig
     */
    static buildContextConfig(contextConfig: Types.SecurityContextConfig): void;
    constructor(service: any, token: any, contextConfig: any);
    /** @type {Service} */
    service: Service;
    /** @type {Token} */
    token: Token;
    /** @type {Types.SecurityContextConfig} */
    config: Types.SecurityContextConfig;
    getAppToken(): string;
    getEmail(): any;
    getExpirationDate(): Date;
    getFamilyName(): any;
    getGivenName(): any;
    getGrantType(): any;
    getLogonName(): any;
    getUserInfo(): {
        email: any;
        familyName: any;
        givenName: any;
        logonName: any;
    };
    getTokenInfo(): import("../token/Token");
}
declare namespace SecurityContext {
    export { Service, Token };
}
import Types = require("../util/Types");
type Service = import("../service/Service");
type Token = import("../token/Token");
//# sourceMappingURL=SecurityContext.d.ts.map